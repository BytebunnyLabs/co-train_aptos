# CoTrain Prometheus Alert Rules
# Alert rules for monitoring CoTrain application health and performance

groups:
  - name: cotrain.application
    rules:
      # Application availability alerts
      - alert: CoTrainFrontendDown
        expr: up{job="cotrain-frontend"} == 0
        for: 1m
        labels:
          severity: critical
          service: frontend
        annotations:
          summary: "CoTrain Frontend is down"
          description: "CoTrain Frontend has been down for more than 1 minute."

      - alert: CoTrainBackendDown
        expr: up{job="cotrain-backend"} == 0
        for: 1m
        labels:
          severity: critical
          service: backend
        annotations:
          summary: "CoTrain Backend is down"
          description: "CoTrain Backend has been down for more than 1 minute."

      # High response time alerts
      - alert: HighResponseTime
        expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m])) > 2
        for: 5m
        labels:
          severity: warning
          service: "{{ $labels.job }}"
        annotations:
          summary: "High response time detected"
          description: "95th percentile response time is {{ $value }}s for {{ $labels.job }}"

      # High error rate alerts
      - alert: HighErrorRate
        expr: rate(http_requests_total{status=~"5.."}[5m]) / rate(http_requests_total[5m]) > 0.05
        for: 5m
        labels:
          severity: warning
          service: "{{ $labels.job }}"
        annotations:
          summary: "High error rate detected"
          description: "Error rate is {{ $value | humanizePercentage }} for {{ $labels.job }}"

      # Memory usage alerts
      - alert: HighMemoryUsage
        expr: (process_resident_memory_bytes / 1024 / 1024) > 512
        for: 10m
        labels:
          severity: warning
          service: "{{ $labels.job }}"
        annotations:
          summary: "High memory usage"
          description: "Memory usage is {{ $value }}MB for {{ $labels.job }}"

      # CPU usage alerts
      - alert: HighCPUUsage
        expr: rate(process_cpu_seconds_total[5m]) * 100 > 80
        for: 10m
        labels:
          severity: warning
          service: "{{ $labels.job }}"
        annotations:
          summary: "High CPU usage"
          description: "CPU usage is {{ $value }}% for {{ $labels.job }}"

  - name: cotrain.database
    rules:
      # Database connectivity
      - alert: PostgreSQLDown
        expr: up{job="postgres"} == 0
        for: 1m
        labels:
          severity: critical
          service: database
        annotations:
          summary: "PostgreSQL is down"
          description: "PostgreSQL database has been down for more than 1 minute."

      # Database connection pool
      - alert: HighDatabaseConnections
        expr: pg_stat_database_numbackends > 80
        for: 5m
        labels:
          severity: warning
          service: database
        annotations:
          summary: "High number of database connections"
          description: "Number of database connections is {{ $value }}"

      # Database query performance
      - alert: SlowDatabaseQueries
        expr: rate(pg_stat_database_tup_fetched[5m]) / rate(pg_stat_database_tup_returned[5m]) < 0.1
        for: 10m
        labels:
          severity: warning
          service: database
        annotations:
          summary: "Slow database queries detected"
          description: "Database query efficiency is low: {{ $value | humanizePercentage }}"

  - name: cotrain.cache
    rules:
      # Redis connectivity
      - alert: RedisDown
        expr: up{job="redis"} == 0
        for: 1m
        labels:
          severity: critical
          service: cache
        annotations:
          summary: "Redis is down"
          description: "Redis cache has been down for more than 1 minute."

      # Redis memory usage
      - alert: RedisHighMemoryUsage
        expr: redis_memory_used_bytes / redis_memory_max_bytes > 0.9
        for: 5m
        labels:
          severity: warning
          service: cache
        annotations:
          summary: "Redis high memory usage"
          description: "Redis memory usage is {{ $value | humanizePercentage }}"

      # Redis connection count
      - alert: RedisHighConnections
        expr: redis_connected_clients > 100
        for: 5m
        labels:
          severity: warning
          service: cache
        annotations:
          summary: "High number of Redis connections"
          description: "Number of Redis connections is {{ $value }}"

  - name: cotrain.infrastructure
    rules:
      # Nginx availability
      - alert: NginxDown
        expr: up{job="nginx"} == 0
        for: 1m
        labels:
          severity: critical
          service: proxy
        annotations:
          summary: "Nginx is down"
          description: "Nginx reverse proxy has been down for more than 1 minute."

      # Disk space
      - alert: LowDiskSpace
        expr: (node_filesystem_avail_bytes / node_filesystem_size_bytes) < 0.1
        for: 5m
        labels:
          severity: warning
          service: system
        annotations:
          summary: "Low disk space"
          description: "Disk space is {{ $value | humanizePercentage }} full on {{ $labels.device }}"

      # System load
      - alert: HighSystemLoad
        expr: node_load1 > 2
        for: 10m
        labels:
          severity: warning
          service: system
        annotations:
          summary: "High system load"
          description: "System load is {{ $value }}"

  - name: cotrain.business
    rules:
      # Training session alerts
      - alert: HighTrainingSessionFailureRate
        expr: rate(cotrain_training_sessions_failed_total[10m]) / rate(cotrain_training_sessions_total[10m]) > 0.1
        for: 5m
        labels:
          severity: warning
          service: training
        annotations:
          summary: "High training session failure rate"
          description: "Training session failure rate is {{ $value | humanizePercentage }}"

      # Model training alerts
      - alert: ModelTrainingStuck
        expr: increase(cotrain_model_training_duration_seconds[30m]) == 0 and cotrain_models_training > 0
        for: 30m
        labels:
          severity: warning
          service: ml
        annotations:
          summary: "Model training appears stuck"
          description: "No progress in model training for 30 minutes"

      # Blockchain transaction alerts
      - alert: HighBlockchainTransactionFailureRate
        expr: rate(cotrain_blockchain_transactions_failed_total[10m]) / rate(cotrain_blockchain_transactions_total[10m]) > 0.05
        for: 5m
        labels:
          severity: warning
          service: blockchain
        annotations:
          summary: "High blockchain transaction failure rate"
          description: "Blockchain transaction failure rate is {{ $value | humanizePercentage }}"

      # User activity alerts
      - alert: LowUserActivity
        expr: rate(cotrain_user_sessions_total[1h]) < 1
        for: 2h
        labels:
          severity: info
          service: user-activity
        annotations:
          summary: "Low user activity"
          description: "User session rate is {{ $value }} per hour"

      # API rate limiting
      - alert: HighAPIRateLimitHits
        expr: rate(cotrain_api_rate_limit_hits_total[5m]) > 10
        for: 5m
        labels:
          severity: warning
          service: api
        annotations:
          summary: "High API rate limit hits"
          description: "API rate limit is being hit {{ $value }} times per second"

  - name: cotrain.security
    rules:
      # Authentication failures
      - alert: HighAuthenticationFailureRate
        expr: rate(cotrain_auth_failures_total[5m]) > 5
        for: 5m
        labels:
          severity: warning
          service: security
        annotations:
          summary: "High authentication failure rate"
          description: "Authentication failure rate is {{ $value }} per second"

      # Suspicious activity
      - alert: SuspiciousUserActivity
        expr: rate(cotrain_suspicious_activity_total[10m]) > 1
        for: 5m
        labels:
          severity: warning
          service: security
        annotations:
          summary: "Suspicious user activity detected"
          description: "Suspicious activity rate is {{ $value }} per second"

      # SSL certificate expiry
      - alert: SSLCertificateExpiringSoon
        expr: probe_ssl_earliest_cert_expiry - time() < 86400 * 7
        for: 1h
        labels:
          severity: warning
          service: security
        annotations:
          summary: "SSL certificate expiring soon"
          description: "SSL certificate for {{ $labels.instance }} expires in {{ $value | humanizeDuration }}"