# CoTrain Prometheus Configuration
# Monitoring configuration for CoTrain monorepo project

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'cotrain'
    environment: 'production'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  - "rules/*.yml"

# A scrape configuration containing exactly one endpoint to scrape:
scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s
    metrics_path: /metrics

  # CoTrain Frontend (Next.js)
  - job_name: 'cotrain-frontend'
    static_configs:
      - targets: ['frontend:3000']
    scrape_interval: 15s
    metrics_path: /api/metrics
    scrape_timeout: 10s
    honor_labels: true
    params:
      format: ['prometheus']

  # CoTrain Backend (NestJS)
  - job_name: 'cotrain-backend'
    static_configs:
      - targets: ['backend:3001']
    scrape_interval: 15s
    metrics_path: /metrics
    scrape_timeout: 10s
    honor_labels: true

  # PostgreSQL Database
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres:5432']
    scrape_interval: 30s
    metrics_path: /metrics
    scrape_timeout: 10s
    # Note: Requires postgres_exporter

  # Redis Cache
  - job_name: 'redis'
    static_configs:
      - targets: ['redis:6379']
    scrape_interval: 30s
    metrics_path: /metrics
    scrape_timeout: 10s
    # Note: Requires redis_exporter

  # Nginx Reverse Proxy
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx:80']
    scrape_interval: 30s
    metrics_path: /metrics
    scrape_timeout: 10s
    # Note: Requires nginx-prometheus-exporter

  # Node Exporter (System metrics)
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 30s
    metrics_path: /metrics
    scrape_timeout: 10s

  # cAdvisor (Container metrics)
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 30s
    metrics_path: /metrics
    scrape_timeout: 10s

  # MinIO Object Storage
  - job_name: 'minio'
    static_configs:
      - targets: ['minio:9000']
    scrape_interval: 30s
    metrics_path: /minio/v2/metrics/cluster
    scrape_timeout: 10s
    bearer_token_file: /etc/prometheus/minio-token

  # Elasticsearch
  - job_name: 'elasticsearch'
    static_configs:
      - targets: ['elasticsearch:9200']
    scrape_interval: 30s
    metrics_path: /_prometheus/metrics
    scrape_timeout: 10s

  # Jaeger Tracing
  - job_name: 'jaeger'
    static_configs:
      - targets: ['jaeger:14269']
    scrape_interval: 30s
    metrics_path: /metrics
    scrape_timeout: 10s

  # Custom application metrics
  - job_name: 'cotrain-custom-metrics'
    static_configs:
      - targets: ['backend:3001']
    scrape_interval: 15s
    metrics_path: /api/custom-metrics
    scrape_timeout: 10s
    honor_labels: true
    params:
      format: ['prometheus']

  # Blockchain metrics (if applicable)
  - job_name: 'blockchain-metrics'
    static_configs:
      - targets: ['backend:3001']
    scrape_interval: 60s
    metrics_path: /api/blockchain/metrics
    scrape_timeout: 30s
    honor_labels: true

  # AI/ML model metrics
  - job_name: 'ml-metrics'
    static_configs:
      - targets: ['backend:3001']
    scrape_interval: 30s
    metrics_path: /api/ml/metrics
    scrape_timeout: 15s
    honor_labels: true

# Remote write configuration (for long-term storage)
# remote_write:
#   - url: "https://prometheus-remote-write-endpoint"
#     basic_auth:
#       username: "username"
#       password: "password"

# Remote read configuration
# remote_read:
#   - url: "https://prometheus-remote-read-endpoint"
#     basic_auth:
#       username: "username"
#       password: "password"

# Storage configuration
storage:
  tsdb:
    path: /prometheus
    retention.time: 15d
    retention.size: 10GB
    wal-compression: true

# Web configuration
web:
  console.templates: /etc/prometheus/consoles
  console.libraries: /etc/prometheus/console_libraries
  enable-lifecycle: true
  enable-admin-api: true
  max-connections: 512
  read-timeout: 30s
  route-prefix: /
  external-url: http://localhost:9090

# Tracing configuration
tracing:
  endpoint: "jaeger:14268/api/traces"
  sampling_fraction: 0.1

# Feature flags
feature_flags:
  enable-new-service-discovery-manager: true
  enable-per-step-stats: true